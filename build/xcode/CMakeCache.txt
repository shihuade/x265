# This is the CMakeCache file.
# For build in directory: /Users/edward.shi/project/HEVCProject/HEVCAllInOne/x265/build/xcode
# It was generated by CMake: /usr/local/Cellar/cmake/3.10.0/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Install location of executables
BIN_INSTALL_DIR:STRING=bin

//Enable run-time sanity checks (debugging)
CHECKED_BUILD:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

//Flags used by the assembler during all build types.
CMAKE_ASM_NASM_FLAGS:STRING=

//Flags used by the assembler during debug builds.
CMAKE_ASM_NASM_FLAGS_DEBUG:STRING=

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_NASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the assembler during release builds.
CMAKE_ASM_NASM_FLAGS_RELEASE:STRING=

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO:STRING=

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=Release

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=x265

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable internal profiling of encoder work
DETAILED_CU_STATS:BOOL=OFF

//Enable stack protection and -ftrapv
ENABLE_AGGRESSIVE_CHECKS:BOOL=OFF

//Enable use of assembly coded primitives
ENABLE_ASSEMBLY:BOOL=ON

//Build standalone CLI application
ENABLE_CLI:BOOL=ON

//Enable dynamic HDR10 compilation
ENABLE_HDR10_PLUS:BOOL=OFF

//Enable libnuma usage (Linux only)
ENABLE_LIBNUMA:BOOL=ON

//Enable VMAF
ENABLE_LIBVMAF:BOOL=OFF

//Enable Position Independent Code
ENABLE_PIC:BOOL=ON

//Enable PPA profiling instrumentation
ENABLE_PPA:BOOL=OFF

//Build shared library
ENABLE_SHARED:BOOL=ON

//Enable Vtune profiling instrumentation
ENABLE_VTUNE:BOOL=OFF

//Implement public C programming interface
EXPORT_C_API:BOOL=ON

//Extra libraries to link against
EXTRA_LIB:STRING=

//Extra link flags
EXTRA_LINK_FLAGS:STRING=

//Compile executable to generate usage data
FPROFILE_GENERATE:BOOL=OFF

//Compile executable using generated usage data
FPROFILE_USE:BOOL=OFF

//-fsanitize options for GCC/clang
FSANITIZE:STRING=

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//hg command line client
HG_EXECUTABLE:FILEPATH=HG_EXECUTABLE-NOTFOUND

//Store pixel samples as 16bit values (Main10/Main12)
HIGH_BIT_DEPTH:BOOL=OFF

//Path to a library.
LIBDL:FILEPATH=/usr/lib/libdl.dylib

//Path to a library.
LIBRT:FILEPATH=LIBRT-NOTFOUND

//Install location of libraries
LIB_INSTALL_DIR:STRING=lib

//Path to a program.
NASM_EXECUTABLE:FILEPATH=/usr/local/bin/nasm

//Target the build CPU
NATIVE_BUILD:BOOL=OFF

//Use a slow mutex to replace atomics
NO_ATOMICS:BOOL=OFF

//NUMA include directory
NUMA_INCLUDE_DIR:PATH=NUMA_INCLUDE_DIR-NOTFOUND

//NUMA library
NUMA_LIBRARY:FILEPATH=NUMA_LIBRARY-NOTFOUND

//NUMA root directory
NUMA_ROOT_DIR:PATH=NUMA_ROOT_DIR-NOTFOUND

//Statically link C runtime for release builds
STATIC_LINK_CRT:BOOL=OFF

//Path to a library.
VMAF:FILEPATH=VMAF-NOTFOUND

//Stop compiles on first warning
WARNINGS_AS_ERRORS:BOOL=OFF

//Dependencies for the target
x265-shared_LIB_DEPENDS:STATIC=general;pthread;general;dl;

//Dependencies for target
x265-static_LIB_DEPENDS:STATIC=

//Value Computed by CMake
x265_BINARY_DIR:STATIC=/Users/edward.shi/project/HEVCProject/HEVCAllInOne/x265/build/xcode

//Value Computed by CMake
x265_SOURCE_DIR:STATIC=/Users/edward.shi/project/HEVCProject/HEVCAllInOne/x265/source


########################
# INTERNAL cache entries
########################

//Stored Xcode object GUID
ALL_BUILD_GUID_CMAKE:INTERNAL=70C45D7311734F3D931F3FE1
//Test CC_HAS_FAST_MATH
CC_HAS_FAST_MATH:INTERNAL=1
//Test CC_HAS_FNO_EXCEPTIONS_FLAG
CC_HAS_FNO_EXCEPTIONS_FLAG:INTERNAL=1
//Test CC_HAS_NO_ARRAY_BOUNDS
CC_HAS_NO_ARRAY_BOUNDS:INTERNAL=1
//Test CC_HAS_NO_NARROWING
CC_HAS_NO_NARROWING:INTERNAL=1
//Test CC_HAS_NO_STRICT_OVERFLOW
CC_HAS_NO_STRICT_OVERFLOW:INTERNAL=1
//Test CC_HAS_STACK_REALIGN
CC_HAS_STACK_REALIGN:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
CMAKE_ASM_NASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS
CMAKE_ASM_NASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_DEBUG
CMAKE_ASM_NASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_MINSIZEREL
CMAKE_ASM_NASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_RELEASE
CMAKE_ASM_NASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/edward.shi/project/HEVCProject/HEVCAllInOne/x265/build/xcode
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.10.0/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.10.0/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.10.0/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Xcode
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/edward.shi/project/HEVCProject/HEVCAllInOne/x265/source
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=3
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/Cellar/cmake/3.10.0/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXPORT_C_API
EXPORT_C_API-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXTRA_LIB
EXTRA_LIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXTRA_LINK_FLAGS
EXTRA_LINK_FLAGS-ADVANCED:INTERNAL=1
//Details about finding nasm
FIND_PACKAGE_MESSAGE_DETAILS_nasm:INTERNAL=[/usr/local/bin/nasm][v2.13.03()]
//ADVANCED property for variable: FPROFILE_GENERATE
FPROFILE_GENERATE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FPROFILE_USE
FPROFILE_USE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have include getopt.h
HAVE_GETOPT_H:INTERNAL=1
//Have include inttypes.h
HAVE_INT_TYPES_H:INTERNAL=1
//Have symbol strtok_r
HAVE_STRTOK_R:INTERNAL=1
//ADVANCED property for variable: HG_EXECUTABLE
HG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBRT
LIBRT-ADVANCED:INTERNAL=1
//nasm sources
MSVC_ASMS:INTERNAL=pixel-a.asm;const-a.asm;cpu-a.asm;ssd-a.asm;mc-a.asm;mc-a2.asm;pixel-util8.asm;blockcopy8.asm;pixeladd8.asm;dct8.asm;seaintegral.asm;sad-a.asm;intrapred8.asm;intrapred8_allangs.asm;v4-ipfilter8.asm;h-ipfilter8.asm;ipfilter8.asm;loopfilter.asm
//ADVANCED property for variable: NATIVE_BUILD
NATIVE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: NUMA_INCLUDE_DIR
NUMA_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: NUMA_LIBRARY
NUMA_LIBRARY-ADVANCED:INTERNAL=1
//Stored Xcode object GUID
PROJECT_x265_GUID_CMAKE:INTERNAL=415F6C77E2F94DD18966AFC0
//Stored Xcode object GUID
ZERO_CHECK_GUID_CMAKE:INTERNAL=EF579DB565F846A49CDE0334
//Stored Xcode object GUID
cli_GUID_CMAKE:INTERNAL=816EBD7C99D6454F80BF9458
//Stored Xcode object GUID
common_GUID_CMAKE:INTERNAL=7901EA4DC1C944CBB92D61B1
//Stored Xcode object GUID
encoder_GUID_CMAKE:INTERNAL=EB7B9FEA30AB4ABFBD593DA5
//Stored Xcode object GUID
install_GUID_CMAKE:INTERNAL=C751243047F04B3F8028484D
//Stored Xcode object GUID
uninstall_GUID_CMAKE:INTERNAL=E85BF949B6074330A93627C0
//Stored Xcode object GUID
x265-shared_GUID_CMAKE:INTERNAL=E657B71BF2F64D31ABBF1C40
//Stored Xcode object GUID
x265-static_GUID_CMAKE:INTERNAL=254E1B368387414C9C2CA4C9

